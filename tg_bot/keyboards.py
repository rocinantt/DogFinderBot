from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database import get_regions, get_areas, get_districts


def get_regions_markup():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ–≥–∏–æ–Ω–∞.
    """
    builder = InlineKeyboardBuilder()
    for region in get_regions():
        builder.button(text=region, callback_data=f"region_{region}")
    builder.adjust(2)
    return builder.as_markup()


def get_areas_markup(region, animal_type):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –æ–±–ª–∞—Å—Ç–∏.

    :param region: —Ä–µ–≥–∏–æ–Ω
    :param animal_type: —Ç–∏–ø –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (—Å–æ–±–∞–∫–∞ –∏–ª–∏ –∫–æ—à–∫–∞)
    :return: –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    areas = get_areas(region, animal_type)

    for area, count in areas:
        button_text = f"{area} ({count})"
        builder.button(text=button_text, callback_data=f"area_{area}")
    builder.adjust(2)
    builder.button(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_area")
    builder.button(text="–ù–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ", callback_data="unassigned")
    builder.adjust(2)

    return builder.as_markup()


def get_districts_markup(area, animal_type):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Ä–∞–π–æ–Ω–∞.

    :param area: –æ–±–ª–∞—Å—Ç—å
    :param animal_type: —Ç–∏–ø –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (—Å–æ–±–∞–∫–∞ –∏–ª–∏ –∫–æ—à–∫–∞)
    :return: –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    districts = get_districts(area, animal_type)

    for district, count in districts:
        button_text = f"{district} ({count})"
        builder.button(text=button_text, callback_data=f"district_{district}")
    builder.adjust(2)
    builder.button(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_district")
    builder.adjust(2)

    return builder.as_markup()


def get_days_markup():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –ø–µ—Ä–∏–æ–¥–∞ –≤ –¥–Ω—è—Ö.

    :return: –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    days_options = [1, 3, 7, 15, 20, 30]
    builder = InlineKeyboardBuilder()
    for days in days_options:
        builder.button(text=str(days), callback_data=f"days_{days}")
        builder.adjust(2)
    return builder.as_markup()


def get_more_results_markup():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–ª–∏ –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ.

    :return: –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ", callback_data="more_results")
    builder.button(text="–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="start")
    builder.adjust(2)
    return builder.as_markup()


def get_animal_type_markup():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (—Å–æ–±–∞–∫–∞ –∏–ª–∏ –∫–æ—à–∫–∞).

    :return: –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üê∂", callback_data="dog")
    builder.button(text="üê±", callback_data="cat")
    builder.adjust(2)
    return builder.as_markup()


def start_again_markup():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–Ω–æ–≤–æ.

    :return: –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="start")
    return builder.as_markup()